// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Activiti.Net.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class HistoricProcessInstanceResponse
    {
        /// <summary>
        /// Initializes a new instance of the HistoricProcessInstanceResponse
        /// class.
        /// </summary>
        public HistoricProcessInstanceResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HistoricProcessInstanceResponse
        /// class.
        /// </summary>
        public HistoricProcessInstanceResponse(string id = default(string), string url = default(string), string businessKey = default(string), string processDefinitionId = default(string), string processDefinitionUrl = default(string), System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), long? durationInMillis = default(long?), string startUserId = default(string), string startActivityId = default(string), string endActivityId = default(string), string deleteReason = default(string), string superProcessInstanceId = default(string), IList<RestVariable> variables = default(IList<RestVariable>), string tenantId = default(string), string name = default(string))
        {
            Id = id;
            Url = url;
            BusinessKey = businessKey;
            ProcessDefinitionId = processDefinitionId;
            ProcessDefinitionUrl = processDefinitionUrl;
            StartTime = startTime;
            EndTime = endTime;
            DurationInMillis = durationInMillis;
            StartUserId = startUserId;
            StartActivityId = startActivityId;
            EndActivityId = endActivityId;
            DeleteReason = deleteReason;
            SuperProcessInstanceId = superProcessInstanceId;
            Variables = variables;
            TenantId = tenantId;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessKey")]
        public string BusinessKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionId")]
        public string ProcessDefinitionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionUrl")]
        public string ProcessDefinitionUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "durationInMillis")]
        public long? DurationInMillis { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startUserId")]
        public string StartUserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startActivityId")]
        public string StartActivityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endActivityId")]
        public string EndActivityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deleteReason")]
        public string DeleteReason { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "superProcessInstanceId")]
        public string SuperProcessInstanceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "variables")]
        public IList<RestVariable> Variables { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
