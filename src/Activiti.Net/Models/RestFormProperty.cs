// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Activiti.Net.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class RestFormProperty
    {
        /// <summary>
        /// Initializes a new instance of the RestFormProperty class.
        /// </summary>
        public RestFormProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestFormProperty class.
        /// </summary>
        public RestFormProperty(string id = default(string), string name = default(string), string type = default(string), string value = default(string), bool? readable = default(bool?), bool? writable = default(bool?), bool? required = default(bool?), string datePattern = default(string), IList<RestEnumFormProperty> enumValues = default(IList<RestEnumFormProperty>))
        {
            Id = id;
            Name = name;
            Type = type;
            Value = value;
            Readable = readable;
            Writable = writable;
            Required = required;
            DatePattern = datePattern;
            EnumValues = enumValues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "readable")]
        public bool? Readable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "writable")]
        public bool? Writable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "required")]
        public bool? Required { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datePattern")]
        public string DatePattern { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enumValues")]
        public IList<RestEnumFormProperty> EnumValues { get; set; }

    }
}
