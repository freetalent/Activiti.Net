// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Activiti.Net.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Process
    {
        /// <summary>
        /// Initializes a new instance of the Process class.
        /// </summary>
        public Process()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Process class.
        /// </summary>
        public Process(string id = default(string), int? xmlRowNumber = default(int?), int? xmlColumnNumber = default(int?), IDictionary<string, IList<ExtensionElement>> extensionElements = default(IDictionary<string, IList<ExtensionElement>>), IDictionary<string, IList<ExtensionAttribute>> attributes = default(IDictionary<string, IList<ExtensionAttribute>>), string name = default(string), bool? executable = default(bool?), string documentation = default(string), IOSpecification ioSpecification = default(IOSpecification), IList<ActivitiListener> executionListeners = default(IList<ActivitiListener>), IList<Lane> lanes = default(IList<Lane>), IList<ValuedDataObject> dataObjects = default(IList<ValuedDataObject>), IList<string> candidateStarterUsers = default(IList<string>), IList<string> candidateStarterGroups = default(IList<string>), IList<EventListener> eventListeners = default(IList<EventListener>), IDictionary<string, FlowElement> flowElementMap = default(IDictionary<string, FlowElement>), FlowElement initialFlowElement = default(FlowElement), IList<Artifact> artifacts = default(IList<Artifact>), IList<FlowElement> flowElements = default(IList<FlowElement>))
        {
            Id = id;
            XmlRowNumber = xmlRowNumber;
            XmlColumnNumber = xmlColumnNumber;
            ExtensionElements = extensionElements;
            Attributes = attributes;
            Name = name;
            Executable = executable;
            Documentation = documentation;
            IoSpecification = ioSpecification;
            ExecutionListeners = executionListeners;
            Lanes = lanes;
            DataObjects = dataObjects;
            CandidateStarterUsers = candidateStarterUsers;
            CandidateStarterGroups = candidateStarterGroups;
            EventListeners = eventListeners;
            FlowElementMap = flowElementMap;
            InitialFlowElement = initialFlowElement;
            Artifacts = artifacts;
            FlowElements = flowElements;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "xmlRowNumber")]
        public int? XmlRowNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "xmlColumnNumber")]
        public int? XmlColumnNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extensionElements")]
        public IDictionary<string, IList<ExtensionElement>> ExtensionElements { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attributes")]
        public IDictionary<string, IList<ExtensionAttribute>> Attributes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executable")]
        public bool? Executable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentation")]
        public string Documentation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ioSpecification")]
        public IOSpecification IoSpecification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionListeners")]
        public IList<ActivitiListener> ExecutionListeners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lanes")]
        public IList<Lane> Lanes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataObjects")]
        public IList<ValuedDataObject> DataObjects { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateStarterUsers")]
        public IList<string> CandidateStarterUsers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateStarterGroups")]
        public IList<string> CandidateStarterGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eventListeners")]
        public IList<EventListener> EventListeners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flowElementMap")]
        public IDictionary<string, FlowElement> FlowElementMap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "initialFlowElement")]
        public FlowElement InitialFlowElement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "artifacts")]
        public IList<Artifact> Artifacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flowElements")]
        public IList<FlowElement> FlowElements { get; set; }

    }
}
