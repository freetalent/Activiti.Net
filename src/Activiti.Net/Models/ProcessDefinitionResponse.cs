// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Activiti.Net.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ProcessDefinitionResponse
    {
        /// <summary>
        /// Initializes a new instance of the ProcessDefinitionResponse class.
        /// </summary>
        public ProcessDefinitionResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProcessDefinitionResponse class.
        /// </summary>
        public ProcessDefinitionResponse(string id = default(string), string url = default(string), string key = default(string), int? version = default(int?), string name = default(string), string description = default(string), string tenantId = default(string), string deploymentId = default(string), string deploymentUrl = default(string), string resource = default(string), string diagramResource = default(string), string category = default(string), bool? graphicalNotationDefined = default(bool?), bool? suspended = default(bool?), bool? startFormDefined = default(bool?))
        {
            Id = id;
            Url = url;
            Key = key;
            Version = version;
            Name = name;
            Description = description;
            TenantId = tenantId;
            DeploymentId = deploymentId;
            DeploymentUrl = deploymentUrl;
            Resource = resource;
            DiagramResource = diagramResource;
            Category = category;
            GraphicalNotationDefined = graphicalNotationDefined;
            Suspended = suspended;
            StartFormDefined = startFormDefined;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deploymentId")]
        public string DeploymentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deploymentUrl")]
        public string DeploymentUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resource")]
        public string Resource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "diagramResource")]
        public string DiagramResource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "graphicalNotationDefined")]
        public bool? GraphicalNotationDefined { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "suspended")]
        public bool? Suspended { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startFormDefined")]
        public bool? StartFormDefined { get; set; }

    }
}
