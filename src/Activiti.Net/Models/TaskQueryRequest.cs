// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Activiti.Net.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TaskQueryRequest
    {
        /// <summary>
        /// Initializes a new instance of the TaskQueryRequest class.
        /// </summary>
        public TaskQueryRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskQueryRequest class.
        /// </summary>
        public TaskQueryRequest(int? start = default(int?), int? size = default(int?), string sort = default(string), string order = default(string), string name = default(string), string nameLike = default(string), string description = default(string), string descriptionLike = default(string), int? priority = default(int?), int? minimumPriority = default(int?), int? maximumPriority = default(int?), string assignee = default(string), string assigneeLike = default(string), string owner = default(string), string ownerLike = default(string), bool? unassigned = default(bool?), string delegationState = default(string), string candidateUser = default(string), string candidateGroup = default(string), IList<string> candidateGroupIn = default(IList<string>), string involvedUser = default(string), string processInstanceId = default(string), string processInstanceBusinessKey = default(string), string processInstanceBusinessKeyLike = default(string), IList<string> processInstanceIdIn = default(IList<string>), string processDefinitionId = default(string), string processDefinitionKey = default(string), string processDefinitionName = default(string), string processDefinitionKeyLike = default(string), string processDefinitionNameLike = default(string), string executionId = default(string), System.DateTime? createdOn = default(System.DateTime?), System.DateTime? createdBefore = default(System.DateTime?), System.DateTime? createdAfter = default(System.DateTime?), bool? excludeSubTasks = default(bool?), string taskDefinitionKey = default(string), string taskDefinitionKeyLike = default(string), System.DateTime? dueDate = default(System.DateTime?), System.DateTime? dueBefore = default(System.DateTime?), System.DateTime? dueAfter = default(System.DateTime?), bool? withoutDueDate = default(bool?), bool? active = default(bool?), bool? includeTaskLocalVariables = default(bool?), bool? includeProcessVariables = default(bool?), string tenantId = default(string), string tenantIdLike = default(string), bool? withoutTenantId = default(bool?), string candidateOrAssigned = default(string), string category = default(string), IList<QueryVariable> taskVariables = default(IList<QueryVariable>), IList<QueryVariable> processInstanceVariables = default(IList<QueryVariable>))
        {
            Start = start;
            Size = size;
            Sort = sort;
            Order = order;
            Name = name;
            NameLike = nameLike;
            Description = description;
            DescriptionLike = descriptionLike;
            Priority = priority;
            MinimumPriority = minimumPriority;
            MaximumPriority = maximumPriority;
            Assignee = assignee;
            AssigneeLike = assigneeLike;
            Owner = owner;
            OwnerLike = ownerLike;
            Unassigned = unassigned;
            DelegationState = delegationState;
            CandidateUser = candidateUser;
            CandidateGroup = candidateGroup;
            CandidateGroupIn = candidateGroupIn;
            InvolvedUser = involvedUser;
            ProcessInstanceId = processInstanceId;
            ProcessInstanceBusinessKey = processInstanceBusinessKey;
            ProcessInstanceBusinessKeyLike = processInstanceBusinessKeyLike;
            ProcessInstanceIdIn = processInstanceIdIn;
            ProcessDefinitionId = processDefinitionId;
            ProcessDefinitionKey = processDefinitionKey;
            ProcessDefinitionName = processDefinitionName;
            ProcessDefinitionKeyLike = processDefinitionKeyLike;
            ProcessDefinitionNameLike = processDefinitionNameLike;
            ExecutionId = executionId;
            CreatedOn = createdOn;
            CreatedBefore = createdBefore;
            CreatedAfter = createdAfter;
            ExcludeSubTasks = excludeSubTasks;
            TaskDefinitionKey = taskDefinitionKey;
            TaskDefinitionKeyLike = taskDefinitionKeyLike;
            DueDate = dueDate;
            DueBefore = dueBefore;
            DueAfter = dueAfter;
            WithoutDueDate = withoutDueDate;
            Active = active;
            IncludeTaskLocalVariables = includeTaskLocalVariables;
            IncludeProcessVariables = includeProcessVariables;
            TenantId = tenantId;
            TenantIdLike = tenantIdLike;
            WithoutTenantId = withoutTenantId;
            CandidateOrAssigned = candidateOrAssigned;
            Category = category;
            TaskVariables = taskVariables;
            ProcessInstanceVariables = processInstanceVariables;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public int? Start { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public int? Size { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sort")]
        public string Sort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order")]
        public string Order { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nameLike")]
        public string NameLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "descriptionLike")]
        public string DescriptionLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minimumPriority")]
        public int? MinimumPriority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maximumPriority")]
        public int? MaximumPriority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assignee")]
        public string Assignee { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assigneeLike")]
        public string AssigneeLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ownerLike")]
        public string OwnerLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unassigned")]
        public bool? Unassigned { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "delegationState")]
        public string DelegationState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateUser")]
        public string CandidateUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateGroup")]
        public string CandidateGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateGroupIn")]
        public IList<string> CandidateGroupIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "involvedUser")]
        public string InvolvedUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processInstanceId")]
        public string ProcessInstanceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processInstanceBusinessKey")]
        public string ProcessInstanceBusinessKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processInstanceBusinessKeyLike")]
        public string ProcessInstanceBusinessKeyLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processInstanceIdIn")]
        public IList<string> ProcessInstanceIdIn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionId")]
        public string ProcessDefinitionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionKey")]
        public string ProcessDefinitionKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionName")]
        public string ProcessDefinitionName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionKeyLike")]
        public string ProcessDefinitionKeyLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processDefinitionNameLike")]
        public string ProcessDefinitionNameLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionId")]
        public string ExecutionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdOn")]
        public System.DateTime? CreatedOn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBefore")]
        public System.DateTime? CreatedBefore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAfter")]
        public System.DateTime? CreatedAfter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "excludeSubTasks")]
        public bool? ExcludeSubTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskDefinitionKey")]
        public string TaskDefinitionKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskDefinitionKeyLike")]
        public string TaskDefinitionKeyLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dueDate")]
        public System.DateTime? DueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dueBefore")]
        public System.DateTime? DueBefore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dueAfter")]
        public System.DateTime? DueAfter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "withoutDueDate")]
        public bool? WithoutDueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "includeTaskLocalVariables")]
        public bool? IncludeTaskLocalVariables { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "includeProcessVariables")]
        public bool? IncludeProcessVariables { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tenantIdLike")]
        public string TenantIdLike { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "withoutTenantId")]
        public bool? WithoutTenantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "candidateOrAssigned")]
        public string CandidateOrAssigned { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskVariables")]
        public IList<QueryVariable> TaskVariables { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processInstanceVariables")]
        public IList<QueryVariable> ProcessInstanceVariables { get; set; }

    }
}
